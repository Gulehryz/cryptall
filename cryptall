import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(CryptoAllApp());
}

class CryptoAllApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'CryptoAll',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.blueGrey,
      ),
      initialRoute: '/',
      routes: {
        '/': (context) => GoalSelectionScreen(),
        '/home': (context) => HomeScreen(),
        '/education': (context) => EducationScreen(),
        '/login': (context) => LoginScreen(),
      },
    );
  }
}

class GoalSelectionScreen extends StatelessWidget {
  Future<void> saveUserGoalAndNavigate(BuildContext context, String goal) async {
    final user = FirebaseAuth.instance.currentUser;
    if (user != null) {
      await FirebaseFirestore.instance.collection('users').doc(user.uid).set(
        {'goal': goal}, SetOptions(merge: true),
      );
    }
    Navigator.pushReplacementNamed(context, '/home');
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Vyber si svoj cieľ')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            ElevatedButton(
              onPressed: () => saveUserGoalAndNavigate(context, 'learn'),
              child: Text('Chcem sa učiť'),
            ),
            ElevatedButton(
              onPressed: () => saveUserGoalAndNavigate(context, 'referral'),
              child: Text('Chcem zarábať cez referral systém'),
            ),
            ElevatedButton(
              onPressed: () => saveUserGoalAndNavigate(context, 'saving'),
              child: Text('Chcem sporiť'),
            ),
            ElevatedButton(
              onPressed: () => saveUserGoalAndNavigate(context, 'mining'),
              child: Text('Chcem ťažiť'),
            ),
            ElevatedButton(
              onPressed: () => saveUserGoalAndNavigate(context, 'trade'),
              child: Text('Chcem obchodovať'),
            ),
          ],
        ),
      ),
    );
  }
}

class HomeScreen extends StatefulWidget {
  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  String? userGoal;

  @override
  void initState() {
    super.initState();
    _loadUserGoal();
  }

  Future<void> _loadUserGoal() async {
    final user = FirebaseAuth.instance.currentUser;
    if (user != null) {
      final doc = await FirebaseFirestore.instance.collection('users').doc(user.uid).get();
      setState(() {
        userGoal = doc.data()?['goal'];
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    final user = FirebaseAuth.instance.currentUser;

    return Scaffold(
      appBar: AppBar(title: Text('CryptoAll')),
      body: Center(
        child: user == null
            ? ElevatedButton(
                onPressed: () => Navigator.pushNamed(context, '/login'),
                child: Text('Prihlásiť sa'),
              )
            : userGoal == null
                ? CircularProgressIndicator()
                : Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      if (userGoal == 'learn')
                        ElevatedButton(
                          onPressed: () => Navigator.pushNamed(context, '/education'),
                          child: Text('Vzdelávacia akadémia'),
                        ),
                      if (userGoal == 'referral')
                        ElevatedButton(
                          onPressed: () {},
                          child: Text('Referral systém'),
                        ),
                      if (userGoal == 'saving')
                        ElevatedButton(
                          onPressed: () {},
                          child: Text('Sporenie'),
                        ),
                      if (userGoal == 'mining')
                        ElevatedButton(
                          onPressed: () {},
                          child: Text('Ťažba'),
                        ),
                      if (userGoal == 'trade')
                        ElevatedButton(
                          onPressed: () {},
                          child: Text('Obchodovanie'),
                        ),
                      SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () async {
                          await FirebaseAuth.instance.signOut();
                          Navigator.pushReplacementNamed(context, '/');
                        },
                        child: Text('Odhlásiť sa'),
                      ),
                    ],
                  ),
      ),
    );
  }
}

class EducationScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Vzdelávacia akadémia')),
      body: Center(child: Text('Tu bude vzdelávací obsah...')),
    );
  }
}

class LoginScreen extends StatefulWidget {
  @override
  _LoginScreenState createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();

  Future<void> _signIn() async {
    try {
      await FirebaseAuth.instance.signInWithEmailAndPassword(
        email: _emailController.text,
        password: _passwordController.text,
      );
      Navigator.pushReplacementNamed(context, '/home');
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Chyba pri prihlasovaní: \$e')),
      );
    }
  }

  Future<void> _register() async {
    try {
      await FirebaseAuth.instance.createUserWithEmailAndPassword(
        email: _emailController.text,
        password: _passwordController.text,
      );
      Navigator.pushReplacementNamed(context, '/home');
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Chyba pri registrácii: \$e')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Prihlásenie')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            TextField(
              controller: _emailController,
              decoration: InputDecoration(labelText: 'E-mail'),
            ),
            TextField(
              controller: _passwordController,
              decoration: InputDecoration(labelText: 'Heslo'),
              obscureText: true,
            ),
            SizedBox(height: 16),
            ElevatedButton(
              onPressed: _signIn,
              child: Text('Prihlásiť sa'),
            ),
            TextButton(
              onPressed: _register,
              child: Text('Zaregistrovať sa'),
            ),
          ],
        ),
      ),
    );
  }
}
